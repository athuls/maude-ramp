		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	   Maude 2.7.1 built: Jun 27 2016 16:35:16
	    Copyright 1997-2016 SRI International
		   Mon Mar 12 19:10:02 2018
==========================================
erewrite in SERVER : init .
*********** rule
rl < O : SERVERSHIM:ServerShim | AS,sockets : SKTS:Configuration >
    createdSocket(SERVER:Oid, socketManager, LISTENER:Oid) => acceptClient(
    LISTENER:Oid, SERVER:Oid) < O : SERVERSHIM:ServerShim | AS,sockets : (
    SKTS:Configuration < LISTENER:Oid : BufferedSocket | read : "" >) > [label
    created-server-socket] .
O --> l("localhost", 0)
SERVERSHIM:ServerShim --> ServerShim
AS --> contacts : empty
SKTS:Configuration --> (none).Configuration
SERVER:Oid --> l("localhost", 4)
LISTENER:Oid --> socket(4)
<> < l("localhost", 0) : ServerShim | sockets : none,contacts : empty > < l(
    "localhost", 4) : Server | store : empty > createdSocket(l("localhost", 4),
    socketManager, socket(4))
--->
(<> < l("localhost", 4) : Server | store : empty >) acceptClient(socket(4), l(
    "localhost", 4)) < l("localhost", 0) : ServerShim | contacts : empty,
    sockets : (none < socket(4) : BufferedSocket | read : "" >) >
*********** trial #1
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #1
*********** trial #2
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #2
*********** trial #3
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #3
*********** trial #4
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #4
*********** trial #5
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #5
*********** rule
(built-in rule for symbol __)
<> acceptClient(socket(4), l("localhost", 4)) < l("localhost", 0) : ServerShim
    | sockets : < socket(4) : BufferedSocket | read : "" >,contacts : empty > <
    l("localhost", 4) : Server | store : empty >
--->
<> < l("localhost", 0) : ServerShim | sockets : < socket(4) : BufferedSocket |
    read : "" >,contacts : empty > < l("localhost", 4) : Server | store : empty
    >
*********** trial #6
crl < O : SERVERSHIM:ServerShim | AS,sockets : SKTS:Configuration,contacts :
    LS:Map{Oid,Oid} > acceptedClient(SERVER:Oid, LISTENER:Oid, IP:String,
    CLIENT:Oid) => (acceptClient(LISTENER:Oid, SERVER:Oid) receive(CLIENT:Oid,
    SERVER:Oid)) < O : SERVERSHIM:ServerShim | sockets : (SKTS:Configuration <
    CLIENT:Oid : BufferedSocket | read : "" >),AS,contacts : insert(l(
    IP:String, 0), CLIENT:Oid, LS:Map{Oid,Oid}) > if not CLIENT:Oid in
    SKTS:Configuration = true [label accepted-client] .
O --> l("localhost", 0)
SERVERSHIM:ServerShim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
SERVER:Oid --> l("localhost", 4)
LISTENER:Oid --> socket(4)
IP:String --> "127.0.0.1"
CLIENT:Oid --> socket(5)
*********** solving condition fragment
not CLIENT:Oid in SKTS:Configuration = true
*********** success for condition fragment
not CLIENT:Oid in SKTS:Configuration = true
O --> l("localhost", 0)
SERVERSHIM:ServerShim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
SERVER:Oid --> l("localhost", 4)
LISTENER:Oid --> socket(4)
IP:String --> "127.0.0.1"
CLIENT:Oid --> socket(5)
*********** success #6
*********** rule
crl < O : SERVERSHIM:ServerShim | AS,sockets : SKTS:Configuration,contacts :
    LS:Map{Oid,Oid} > acceptedClient(SERVER:Oid, LISTENER:Oid, IP:String,
    CLIENT:Oid) => (acceptClient(LISTENER:Oid, SERVER:Oid) receive(CLIENT:Oid,
    SERVER:Oid)) < O : SERVERSHIM:ServerShim | sockets : (SKTS:Configuration <
    CLIENT:Oid : BufferedSocket | read : "" >),AS,contacts : insert(l(
    IP:String, 0), CLIENT:Oid, LS:Map{Oid,Oid}) > if not CLIENT:Oid in
    SKTS:Configuration = true [label accepted-client] .
O --> l("localhost", 0)
SERVERSHIM:ServerShim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
SERVER:Oid --> l("localhost", 4)
LISTENER:Oid --> socket(4)
IP:String --> "127.0.0.1"
CLIENT:Oid --> socket(5)
<> < l("localhost", 0) : ServerShim | sockets : < socket(4) : BufferedSocket |
    read : "" >,contacts : empty > < l("localhost", 4) : Server | store : empty
    > acceptedClient(l("localhost", 4), socket(4), "127.0.0.1", socket(5))
--->
(<> < l("localhost", 4) : Server | store : empty >) (acceptClient(socket(4), l(
    "localhost", 4)) receive(socket(5), l("localhost", 4))) < l("localhost", 0)
    : ServerShim | sockets : (< socket(4) : BufferedSocket | read : "" > <
    socket(5) : BufferedSocket | read : "" >),none,contacts : insert(l(
    "127.0.0.1", 0), socket(5), empty) >
*********** trial #7
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #7
*********** trial #8
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #8
*********** trial #9
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #9
*********** trial #10
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #10
*********** trial #11
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #11
*********** trial #12
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #12
*********** trial #13
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #13
*********** trial #14
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #14
*********** trial #15
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #15
*********** trial #16
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #16
*********** rule
(built-in rule for symbol __)
<> acceptClient(socket(4), l("localhost", 4)) receive(socket(5), l("localhost",
    4)) < l("localhost", 0) : ServerShim | sockets : (< socket(4) :
    BufferedSocket | read : "" > < socket(5) : BufferedSocket | read : "" >),
    contacts : l("127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server |
    store : empty >
--->
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server | store :
    empty >
*********** rule
rl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >) > received(SERVER:Oid, SOCKET:Oid,
    DATA:String) => receive(SOCKET:Oid, SERVER:Oid) < O : SHIM:Shim | AS,
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : (
    S:String + DATA:String) >) > [label received-from-client] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> contacts : l("127.0.0.1", 0) |-> socket(5)
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
SERVER:Oid --> l("localhost", 4)
DATA:String --> "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]"
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server | store :
    empty > received(l("localhost", 4), socket(5), "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]")
--->
(<> < l("localhost", 4) : Server | store : empty >) receive(socket(5), l(
    "localhost", 4)) < l("localhost", 0) : ServerShim | contacts : l(
    "127.0.0.1", 0) |-> socket(5),sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : ("" + "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]") >) >
*********** trial #17
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #17
*********** trial #18
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) ==
    notFound = true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) ==
    notFound = true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** success #18
*********** rule
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]" >),contacts : l("127.0.0.1", 0) |->
    socket(5) >
--->
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : substr("\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]", 5 + 4, length("\003\001\377\001[beg]user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]")) >),none,contacts : l(
    "127.0.0.1", 0) |-> socket(5) >
*********** rule
rl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >) > received(SERVER:Oid, SOCKET:Oid,
    DATA:String) => receive(SOCKET:Oid, SERVER:Oid) < O : SHIM:Shim | AS,
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : (
    S:String + DATA:String) >) > [label received-from-client] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> contacts : l("127.0.0.1", 0) |-> socket(5)
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]"
SERVER:Oid --> l("localhost", 4)
DATA:String --> "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]" >),contacts : l("127.0.0.1", 0) |-> socket(5) > < l(
    "localhost", 4) : Server | store : empty > received(l("localhost", 4),
    socket(5), "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]")
--->
(<> < l("localhost", 4) : Server | store : empty >) receive(socket(5), l(
    "localhost", 4)) < l("localhost", 0) : ServerShim | contacts : l(
    "127.0.0.1", 0) |-> socket(5),sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : ("user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]" + "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]") >) >
*********** trial #19
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #19
*********** trial #20
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #20
*********** trial #21
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #21
*********** trial #22
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** success #22
*********** rule
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
    >),contacts : l("127.0.0.1", 0) |-> socket(5) >
--->
["user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"] < l("localhost", 0) : ServerShim |
    sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : substr("user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]", 5 + 116, length("user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov][sep]\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]")) >),none,contacts : l("127.0.0.1", 0) |-> socket(5) >
*********** trial #23
crl [KV] < O : Server | store : STORE > => < O : Server | store : insert(
    substr(KV, 0, N), substr(STR, 0, N'), STORE) > if N := find(KV, "[eok]", 0)
    /\ STR := substr(KV, N + 5, length(KV)) /\ N' := find(STR, "[eov]", 0) .
KV --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"
O --> l("localhost", 4)
STORE --> (empty).Map{String,String}
N --> (unbound)
STR --> (unbound)
N' --> (unbound)
*********** solving condition fragment
N := find(KV, "[eok]", 0)
*********** success for condition fragment
N := find(KV, "[eok]", 0)
KV --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"
O --> l("localhost", 4)
STORE --> (empty).Map{String,String}
N --> 6
STR --> (unbound)
N' --> (unbound)
*********** solving condition fragment
STR := substr(KV, N + 5, length(KV))
*********** success for condition fragment
STR := substr(KV, N + 5, length(KV))
KV --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"
O --> l("localhost", 4)
STORE --> (empty).Map{String,String}
N --> 6
STR --> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"
N' --> (unbound)
*********** solving condition fragment
N' := find(STR, "[eov]", 0)
*********** success for condition fragment
N' := find(STR, "[eov]", 0)
KV --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"
O --> l("localhost", 4)
STORE --> (empty).Map{String,String}
N --> 6
STR --> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"
N' --> 100
*********** success #23
*********** rule
crl [KV] < O : Server | store : STORE > => < O : Server | store : insert(
    substr(KV, 0, N), substr(STR, 0, N'), STORE) > if N := find(KV, "[eok]", 0)
    /\ STR := substr(KV, N + 5, length(KV)) /\ N' := find(STR, "[eov]", 0) .
KV --> "user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"
O --> l("localhost", 4)
STORE --> (empty).Map{String,String}
N --> 6
STR --> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"
N' --> 100
<> ["user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]"] < l("localhost", 0) : ServerShim |
    sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >),contacts : l("127.0.0.1", 0) |-> socket(5) > < l("localhost",
    4) : Server | store : empty >
--->
(<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket
    | read : "" > < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >),contacts : l("127.0.0.1", 0) |->
    socket(5) >) < l("localhost", 4) : Server | store : insert(substr("user48[eok]>'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]", 0, 6), substr(">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>[eov]", 0,
    100), empty) >
*********** trial #24
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #24
*********** trial #25
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #25
*********** trial #26
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #26
*********** trial #27
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #27
*********** trial #28
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #28
*********** trial #29
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) ==
    notFound = true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) ==
    notFound = true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** success #29
*********** rule
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >),contacts : l("127.0.0.1", 0) |->
    socket(5) >
--->
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : substr("\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]", 5 + 4, length("\003\001\377\001[beg]user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]")) >),none,contacts : l(
    "127.0.0.1", 0) |-> socket(5) >
*********** trial #30
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #30
*********** trial #31
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #31
*********** trial #32
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #32
*********** trial #33
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** success #33
*********** rule
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]" >),contacts : l("127.0.0.1", 0) |-> socket(5) >
--->
["user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"] < l("localhost", 0) : ServerShim |
    sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : substr("user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]",
    5 + 116, length("user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov][sep]")) >),none,
    contacts : l("127.0.0.1", 0) |-> socket(5) >
*********** trial #34
crl [READ] < O : Server | store : STORE > => [STORE[substr(READ, 0, N)]] < O :
    Server | store : STORE > if N := find(READ, "[eor]", 0) .
READ --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>"
N --> (unbound)
*********** solving condition fragment
N := find(READ, "[eor]", 0)
*********** failure for condition fragment
N := find(READ, "[eor]", 0)
*********** failure #34
*********** trial #35
crl [KV] < O : Server | store : STORE > => < O : Server | store : insert(
    substr(KV, 0, N), substr(STR, 0, N'), STORE) > if N := find(KV, "[eok]", 0)
    /\ STR := substr(KV, N + 5, length(KV)) /\ N' := find(STR, "[eov]", 0) .
KV --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>"
N --> (unbound)
STR --> (unbound)
N' --> (unbound)
*********** solving condition fragment
N := find(KV, "[eok]", 0)
*********** success for condition fragment
N := find(KV, "[eok]", 0)
KV --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>"
N --> 6
STR --> (unbound)
N' --> (unbound)
*********** solving condition fragment
STR := substr(KV, N + 5, length(KV))
*********** success for condition fragment
STR := substr(KV, N + 5, length(KV))
KV --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>"
N --> 6
STR --> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"
N' --> (unbound)
*********** solving condition fragment
N' := find(STR, "[eov]", 0)
*********** success for condition fragment
N' := find(STR, "[eov]", 0)
KV --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>"
N --> 6
STR --> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"
N' --> 100
*********** success #35
*********** rule
crl [KV] < O : Server | store : STORE > => < O : Server | store : insert(
    substr(KV, 0, N), substr(STR, 0, N'), STORE) > if N := find(KV, "[eok]", 0)
    /\ STR := substr(KV, N + 5, length(KV)) /\ N' := find(STR, "[eov]", 0) .
KV --> "user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>"
N --> 6
STR --> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"
N' --> 100
<> ["user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]"] < l("localhost", 0) : ServerShim |
    sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >),contacts : l("127.0.0.1", 0) |-> socket(5) >
    < l("localhost", 4) : Server | store : "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>"
    >
--->
(<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket
    | read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) >) < l("localhost", 4) : Server | store :
    insert(substr("user49[eok]%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]", 0, 6), substr("%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?[eov]", 0, 100), "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>") >
*********** trial #36
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #36
*********** trial #37
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #37
*********** trial #38
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #38
*********** trial #39
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #39
*********** trial #40
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #40
*********** trial #41
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #41
*********** trial #42
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #42
*********** trial #43
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #43
*********** trial #44
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #44
*********** trial #45
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #45
*********** rule
(built-in rule for symbol __)
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server | store : (
    "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") >
--->
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server | store : (
    "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") >
    closedSocket(l("localhost", 4), socket(5), "")
*********** trial #46
crl < O : SERVERSHIM:ServerShim | AS,sockets : SKTS:Configuration,contacts :
    LS:Map{Oid,Oid} > acceptedClient(SERVER:Oid, LISTENER:Oid, IP:String,
    CLIENT:Oid) => (acceptClient(LISTENER:Oid, SERVER:Oid) receive(CLIENT:Oid,
    SERVER:Oid)) < O : SERVERSHIM:ServerShim | sockets : (SKTS:Configuration <
    CLIENT:Oid : BufferedSocket | read : "" >),AS,contacts : insert(l(
    IP:String, 0), CLIENT:Oid, LS:Map{Oid,Oid}) > if not CLIENT:Oid in
    SKTS:Configuration = true [label accepted-client] .
O --> l("localhost", 0)
SERVERSHIM:ServerShim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
SERVER:Oid --> l("localhost", 4)
LISTENER:Oid --> socket(4)
IP:String --> "127.0.0.1"
CLIENT:Oid --> socket(5)
*********** solving condition fragment
not CLIENT:Oid in SKTS:Configuration = true
*********** failure for condition fragment
not CLIENT:Oid in SKTS:Configuration = true
*********** failure #46
*********** rule
rl < O : SERVERSHIM:ServerShim | AS,sockets : (SKTS:Configuration < CLIENT:Oid
    : BufferedSocket | AS':AttributeSet >),contacts : LS:Map{Oid,Oid} >
    acceptedClient(SERVER:Oid, LISTENER:Oid, IP:String, CLIENT:Oid) => (
    acceptClient(LISTENER:Oid, SERVER:Oid) receive(CLIENT:Oid, SERVER:Oid)) < O
    : SERVERSHIM:ServerShim | sockets : (SKTS:Configuration < CLIENT:Oid :
    BufferedSocket | AS':AttributeSet >),AS,contacts : insert(l(IP:String, 0),
    CLIENT:Oid, LS:Map{Oid,Oid}) > [label accepted-client-2] .
O --> l("localhost", 0)
SERVERSHIM:ServerShim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
CLIENT:Oid --> socket(5)
AS':AttributeSet --> read : ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
SERVER:Oid --> l("localhost", 4)
LISTENER:Oid --> socket(4)
IP:String --> "127.0.0.1"
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server | store : (
    "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") >
    closedSocket(l("localhost", 4), socket(5), "") acceptedClient(l(
    "localhost", 4), socket(4), "127.0.0.1", socket(5))
--->
(<> < l("localhost", 4) : Server | store : ("user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(
    5), "")) (acceptClient(socket(4), l("localhost", 4)) receive(socket(5), l(
    "localhost", 4))) < l("localhost", 0) : ServerShim | sockets : (< socket(4)
    : BufferedSocket | read : "" > < socket(5) : BufferedSocket | read : "" >),
    none,contacts : insert(l("127.0.0.1", 0), socket(5), l("127.0.0.1", 0) |->
    socket(5)) >
*********** trial #47
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #47
*********** trial #48
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #48
*********** trial #49
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #49
*********** trial #50
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #50
*********** trial #51
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #51
*********** trial #52
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #52
*********** trial #53
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #53
*********** trial #54
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #54
*********** trial #55
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #55
*********** trial #56
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #56
*********** rule
(built-in rule for symbol __)
<> acceptClient(socket(4), l("localhost", 4)) receive(socket(5), l("localhost",
    4)) < l("localhost", 0) : ServerShim | sockets : (< socket(4) :
    BufferedSocket | read : "" > < socket(5) : BufferedSocket | read : "" >),
    contacts : l("127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server |
    store : ("user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(5), "")
--->
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server | store : (
    "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") >
    closedSocket(l("localhost", 4), socket(5), "")
*********** rule
rl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >) > received(SERVER:Oid, SOCKET:Oid,
    DATA:String) => receive(SOCKET:Oid, SERVER:Oid) < O : SHIM:Shim | AS,
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : (
    S:String + DATA:String) >) > [label received-from-client] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> contacts : l("127.0.0.1", 0) |-> socket(5)
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
SERVER:Oid --> l("localhost", 4)
DATA:String --> "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server | store : (
    "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") >
    received(l("localhost", 4), socket(5), "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]") closedSocket(l("localhost", 4), socket(5), "")
--->
(<> < l("localhost", 4) : Server | store : ("user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(
    5), "")) receive(socket(5), l("localhost", 4)) < l("localhost", 0) :
    ServerShim | contacts : l("127.0.0.1", 0) |-> socket(5),sockets : (<
    socket(4) : BufferedSocket | read : "" > < socket(5) : BufferedSocket |
    read : ("" + "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]") >) >
*********** trial #57
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #57
*********** trial #58
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #58
*********** trial #59
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #59
*********** trial #60
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #60
*********** trial #61
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #61
*********** trial #62
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) ==
    notFound = true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) ==
    notFound = true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** success #62
*********** rule
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]" >),contacts : l("127.0.0.1", 0) |->
    socket(5) >
--->
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : substr("\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]", 5 + 4, length("\003\001\377\001[beg]user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]")) >),none,contacts : l(
    "127.0.0.1", 0) |-> socket(5) >
*********** rule
(built-in rule for symbol __)
<> receive(socket(5), l("localhost", 4)) < l("localhost", 0) : ServerShim |
    sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]" >),
    contacts : l("127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server |
    store : ("user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(5), "")
--->
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]" >),contacts : l("127.0.0.1", 0) |-> socket(5) > < l(
    "localhost", 4) : Server | store : ("user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>",
    "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4),
    socket(5), "")
*********** trial #63
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #63
*********** trial #64
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #64
*********** trial #65
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #65
*********** trial #66
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** success #66
*********** rule
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]" >),contacts : l("127.0.0.1", 0) |-> socket(5) >
--->
["user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"] < l("localhost", 0) : ServerShim |
    sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : substr("user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]",
    5 + 116, length("user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov][sep]")) >),none,
    contacts : l("127.0.0.1", 0) |-> socket(5) >
*********** trial #67
crl [KV] < O : Server | store : STORE > => < O : Server | store : insert(
    substr(KV, 0, N), substr(STR, 0, N'), STORE) > if N := find(KV, "[eok]", 0)
    /\ STR := substr(KV, N + 5, length(KV)) /\ N' := find(STR, "[eov]", 0) .
KV --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> (unbound)
STR --> (unbound)
N' --> (unbound)
*********** solving condition fragment
N := find(KV, "[eok]", 0)
*********** success for condition fragment
N := find(KV, "[eok]", 0)
KV --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> 6
STR --> (unbound)
N' --> (unbound)
*********** solving condition fragment
STR := substr(KV, N + 5, length(KV))
*********** success for condition fragment
STR := substr(KV, N + 5, length(KV))
KV --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> 6
STR --> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"
N' --> (unbound)
*********** solving condition fragment
N' := find(STR, "[eov]", 0)
*********** success for condition fragment
N' := find(STR, "[eov]", 0)
KV --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> 6
STR --> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"
N' --> 100
*********** success #67
*********** rule
crl [KV] < O : Server | store : STORE > => < O : Server | store : insert(
    substr(KV, 0, N), substr(STR, 0, N'), STORE) > if N := find(KV, "[eok]", 0)
    /\ STR := substr(KV, N + 5, length(KV)) /\ N' := find(STR, "[eov]", 0) .
KV --> "user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> 6
STR --> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"
N' --> 100
<> ["user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]"] < l("localhost", 0) : ServerShim |
    sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >),contacts : l("127.0.0.1", 0) |-> socket(5) >
    < l("localhost", 4) : Server | store : ("user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(
    5), "")
--->
(<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket
    | read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) > closedSocket(l("localhost", 4), socket(5),
    "")) < l("localhost", 4) : Server | store : insert(substr("user48[eok]<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]", 0, 6), substr("<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211[eov]", 0, 100), (
    "user48" |-> ">'):%.(8?$.:0$+(?357 58,08*1$ :4!$/?%&>&(-<#9/(#=/$1.$3#*56 4:9&1//926?:34-%#/:+6446?'$22.#0+' 8520>", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"))
    >
*********** trial #68
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #68
*********** trial #69
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #69
*********** trial #70
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #70
*********** trial #71
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #71
*********** trial #72
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #72
*********** trial #73
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #73
*********** trial #74
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #74
*********** trial #75
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #75
*********** trial #76
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #76
*********** trial #77
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #77
*********** trial #78
crl < O : SERVERSHIM:ServerShim | AS,sockets : SKTS:Configuration,contacts :
    LS:Map{Oid,Oid} > acceptedClient(SERVER:Oid, LISTENER:Oid, IP:String,
    CLIENT:Oid) => (acceptClient(LISTENER:Oid, SERVER:Oid) receive(CLIENT:Oid,
    SERVER:Oid)) < O : SERVERSHIM:ServerShim | sockets : (SKTS:Configuration <
    CLIENT:Oid : BufferedSocket | read : "" >),AS,contacts : insert(l(
    IP:String, 0), CLIENT:Oid, LS:Map{Oid,Oid}) > if not CLIENT:Oid in
    SKTS:Configuration = true [label accepted-client] .
O --> l("localhost", 0)
SERVERSHIM:ServerShim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
SERVER:Oid --> l("localhost", 4)
LISTENER:Oid --> socket(4)
IP:String --> "128.174.244.87"
CLIENT:Oid --> socket(6)
*********** solving condition fragment
not CLIENT:Oid in SKTS:Configuration = true
*********** success for condition fragment
not CLIENT:Oid in SKTS:Configuration = true
O --> l("localhost", 0)
SERVERSHIM:ServerShim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
SERVER:Oid --> l("localhost", 4)
LISTENER:Oid --> socket(4)
IP:String --> "128.174.244.87"
CLIENT:Oid --> socket(6)
*********** success #78
*********** rule
crl < O : SERVERSHIM:ServerShim | AS,sockets : SKTS:Configuration,contacts :
    LS:Map{Oid,Oid} > acceptedClient(SERVER:Oid, LISTENER:Oid, IP:String,
    CLIENT:Oid) => (acceptClient(LISTENER:Oid, SERVER:Oid) receive(CLIENT:Oid,
    SERVER:Oid)) < O : SERVERSHIM:ServerShim | sockets : (SKTS:Configuration <
    CLIENT:Oid : BufferedSocket | read : "" >),AS,contacts : insert(l(
    IP:String, 0), CLIENT:Oid, LS:Map{Oid,Oid}) > if not CLIENT:Oid in
    SKTS:Configuration = true [label accepted-client] .
O --> l("localhost", 0)
SERVERSHIM:ServerShim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5)
SERVER:Oid --> l("localhost", 4)
LISTENER:Oid --> socket(4)
IP:String --> "128.174.244.87"
CLIENT:Oid --> socket(6)
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "127.0.0.1", 0) |-> socket(5) > < l("localhost", 4) : Server | store : (
    "user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") >
    closedSocket(l("localhost", 4), socket(5), "") acceptedClient(l(
    "localhost", 4), socket(4), "128.174.244.87", socket(6))
--->
(<> < l("localhost", 4) : Server | store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(
    5), "")) (acceptClient(socket(4), l("localhost", 4)) receive(socket(6), l(
    "localhost", 4))) < l("localhost", 0) : ServerShim | sockets : ((< socket(
    4) : BufferedSocket | read : "" > < socket(5) : BufferedSocket | read : ""
    >) < socket(6) : BufferedSocket | read : "" >),none,contacts : insert(l(
    "128.174.244.87", 0), socket(6), l("127.0.0.1", 0) |-> socket(5)) >
*********** trial #79
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #79
*********** trial #80
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #80
*********** trial #81
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #81
*********** trial #82
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #82
*********** trial #83
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #83
*********** trial #84
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #84
*********** trial #85
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #85
*********** trial #86
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #86
*********** trial #87
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #87
*********** trial #88
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #88
*********** trial #89
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #89
*********** trial #90
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #90
*********** trial #91
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #91
*********** trial #92
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #92
*********** trial #93
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #93
*********** rule
(built-in rule for symbol __)
<> acceptClient(socket(4), l("localhost", 4)) receive(socket(6), l("localhost",
    4)) < l("localhost", 0) : ServerShim | sockets : (< socket(4) :
    BufferedSocket | read : "" > < socket(5) : BufferedSocket | read : "" > <
    socket(6) : BufferedSocket | read : "" >),contacts : (l("127.0.0.1", 0) |->
    socket(5), l("128.174.244.87", 0) |-> socket(6)) > < l("localhost", 4) :
    Server | store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(5), "")
--->
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >),contacts : (l("127.0.0.1", 0) |-> socket(5),
    l("128.174.244.87", 0) |-> socket(6)) > < l("localhost", 4) : Server |
    store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(5), "")
*********** rule
rl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >) > received(SERVER:Oid, SOCKET:Oid,
    DATA:String) => receive(SOCKET:Oid, SERVER:Oid) < O : SHIM:Shim | AS,
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : (
    S:String + DATA:String) >) > [label received-from-client] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> contacts : (l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6))
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
SERVER:Oid --> l("localhost", 4)
DATA:String --> "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >),contacts : (l("127.0.0.1", 0) |-> socket(5),
    l("128.174.244.87", 0) |-> socket(6)) > < l("localhost", 4) : Server |
    store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > received(l("localhost", 4), socket(6), "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]") closedSocket(l("localhost", 4), socket(5),
    "")
--->
(<> < l("localhost", 4) : Server | store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(
    5), "")) receive(socket(6), l("localhost", 4)) < l("localhost", 0) :
    ServerShim | contacts : (l("127.0.0.1", 0) |-> socket(5), l(
    "128.174.244.87", 0) |-> socket(6)),sockets : ((< socket(4) :
    BufferedSocket | read : "" > < socket(5) : BufferedSocket | read : "" >) <
    socket(6) : BufferedSocket | read : ("" + "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]") >) >
*********** trial #94
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #94
*********** trial #95
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #95
*********** trial #96
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #96
*********** trial #97
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #97
*********** trial #98
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #98
*********** trial #99
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #99
*********** trial #100
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #100
*********** trial #101
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #101
*********** trial #102
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) ==
    notFound = true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) ==
    notFound = true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** success #102
*********** rule
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >),contacts : (l("127.0.0.1", 0) |-> socket(5), l(
    "128.174.244.87", 0) |-> socket(6)) >
--->
< l("localhost", 0) : ServerShim | sockets : ((< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" >) < socket(6) :
    BufferedSocket | read : substr("\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]", 5 + 4, length("\003\001\377\001[beg]user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]")) >),none,contacts : (l("127.0.0.1", 0) |-> socket(5), l(
    "128.174.244.87", 0) |-> socket(6)) >
*********** rule
(built-in rule for symbol __)
<> receive(socket(6), l("localhost", 4)) < l("localhost", 0) : ServerShim |
    sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" > < socket(6) : BufferedSocket | read : "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >),contacts : (l("127.0.0.1", 0) |-> socket(
    5), l("128.174.244.87", 0) |-> socket(6)) > < l("localhost", 4) : Server |
    store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l("localhost", 4), socket(5), "")
--->
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >),
    contacts : (l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)) > < l("localhost", 4) : Server | store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l(
    "localhost", 4), socket(5), "") closedSocket(l("localhost", 4), socket(6),
    "")
*********** trial #103
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #103
*********** trial #104
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #104
*********** trial #105
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #105
*********** trial #106
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #106
*********** trial #107
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #107
*********** trial #108
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound =
    true
*********** success for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound =
    true
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** success #108
*********** rule
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]"
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
< l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]" >),
    contacts : (l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)) >
--->
["user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"] < l("localhost", 0) : ServerShim |
    sockets : ((< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >) < socket(6) : BufferedSocket | read : substr("user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]", 5 + 116, length("user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov][sep]")) >),none,contacts : (l("127.0.0.1", 0) |-> socket(5),
    l("128.174.244.87", 0) |-> socket(6)) >
*********** trial #109
crl [KV] < O : Server | store : STORE > => < O : Server | store : insert(
    substr(KV, 0, N), substr(STR, 0, N'), STORE) > if N := find(KV, "[eok]", 0)
    /\ STR := substr(KV, N + 5, length(KV)) /\ N' := find(STR, "[eov]", 0) .
KV --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> (unbound)
STR --> (unbound)
N' --> (unbound)
*********** solving condition fragment
N := find(KV, "[eok]", 0)
*********** success for condition fragment
N := find(KV, "[eok]", 0)
KV --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> 6
STR --> (unbound)
N' --> (unbound)
*********** solving condition fragment
STR := substr(KV, N + 5, length(KV))
*********** success for condition fragment
STR := substr(KV, N + 5, length(KV))
KV --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> 6
STR --> "%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"
N' --> (unbound)
*********** solving condition fragment
N' := find(STR, "[eov]", 0)
*********** success for condition fragment
N' := find(STR, "[eov]", 0)
KV --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> 6
STR --> "%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"
N' --> 100
*********** success #109
*********** rule
crl [KV] < O : Server | store : STORE > => < O : Server | store : insert(
    substr(KV, 0, N), substr(STR, 0, N'), STORE) > if N := find(KV, "[eok]", 0)
    /\ STR := substr(KV, N + 5, length(KV)) /\ N' := find(STR, "[eov]", 0) .
KV --> "user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"
O --> l("localhost", 4)
STORE --> "user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?"
N --> 6
STR --> "%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"
N' --> 100
<> ["user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]"] < l("localhost", 0) : ServerShim |
    sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" > < socket(6) : BufferedSocket | read : "" >),
    contacts : (l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)) > < l("localhost", 4) : Server | store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?") > closedSocket(l(
    "localhost", 4), socket(5), "") closedSocket(l("localhost", 4), socket(6),
    "")
--->
(<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket
    | read : "" > < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >),contacts : (l("127.0.0.1", 0) |-> socket(5),
    l("128.174.244.87", 0) |-> socket(6)) > closedSocket(l("localhost", 4),
    socket(5), "") closedSocket(l("localhost", 4), socket(6), "")) < l(
    "localhost", 4) : Server | store : insert(substr("user49[eok]%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]", 0, 6), substr("%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/([eov]", 0, 100), ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>($72(.24=##%&0-6 $$- <-5#8',><6$=<80<>2=:2=&$8!.)7<)'5#+7#3124/'$<,*,1=2 9/!='$:0489 #%2$!-0*%)=(?")) >
*********** trial #110
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #110
*********** trial #111
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #111
*********** trial #112
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep\335", 0))] < O : SHIM:Shim |
    sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 8 + find(S:String, "[sep\335", 0), length(S:String)) >),
    AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0,
    find(S:String, "[sep\335", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep\335", 0)), "beg]", 0) == notFound
    = true [label flush-msg-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #112
*********** trial #113
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #113
*********** trial #114
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #114
*********** trial #115
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > =>
    closeSocket(SOCKET:Oid, O) < O : SHIM:Shim | sockets : (SKTS:Configuration
    < SOCKET:Oid : BufferedSocket | read : substr(S:String, 6 + find(S:String,
    "[exit]", 0), length(S:String)) >),AS,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[beg]", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "[exit]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[exit]", 0)), "[sep\335", 0) == notFound = true [label
    close-socket-2] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[exit]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #115
*********** trial #116
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #116
*********** trial #117
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #117
*********** trial #118
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 5 + find(S:String, "[beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "beg]", 0) ==
    notFound = true [label flush-msg-beg-0] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #118
*********** trial #119
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #119
*********** trial #120
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #120
*********** trial #121
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => < O :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 4 + find(S:String, "beg]", 0), length(S:String))
    >),AS,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(
    S:String, "beg]", 0)), "[sep]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[beg]", 0) ==
    notFound = true [label flush-msg-beg] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #121
*********** trial #122
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #122
*********** trial #123
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #123
*********** trial #124
crl < O : SHIM:Shim | AS,sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid} > => [
    substr(S:String, 0, find(S:String, "[sep]", 0))] < O : SHIM:Shim | sockets
    : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read : substr(
    S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),AS,contacts
    : LS:Map{Oid,Oid} > if find(substr(S:String, 0, find(S:String, "[sep]",
    0)), "[sep\335", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[sep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) == notFound = true [
    label flush-msg-1] .
O --> l("localhost", 0)
SHIM:Shim --> ServerShim
AS --> (none).AttributeSet
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >
SOCKET:Oid --> socket(6)
S:String --> ""
LS:Map{Oid,Oid} --> l("127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |->
    socket(6)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #124
*********** rule
(built-in rule for symbol __)
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >),contacts : (l("127.0.0.1", 0) |-> socket(5),
    l("128.174.244.87", 0) |-> socket(6)) > < l("localhost", 4) : Server |
    store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/(") > closedSocket(l("localhost", 4), socket(5), "") closedSocket(l(
    "localhost", 4), socket(6), "")
--->
<> < l("localhost", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket |
    read : "" > < socket(5) : BufferedSocket | read : "" > < socket(6) :
    BufferedSocket | read : "" >),contacts : (l("127.0.0.1", 0) |-> socket(5),
    l("128.174.244.87", 0) |-> socket(6)) > < l("localhost", 4) : Server |
    store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211", "user49" |-> "%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/(") > closedSocket(l("localhost", 4), socket(5), "") closedSocket(l(
    "localhost", 4), socket(5), "") closedSocket(l("localhost", 4), socket(6),
    "")
rewrites: 382 in 16ms cpu (241416ms real) (23875 rewrites/second)
result Configuration: <> < l("localhost", 0) : ServerShim | sockets : (<
    socket(4) : BufferedSocket | read : "" > < socket(5) : BufferedSocket |
    read : "" > < socket(6) : BufferedSocket | read : "" >),contacts : (l(
    "127.0.0.1", 0) |-> socket(5), l("128.174.244.87", 0) |-> socket(6)) > < l(
    "localhost", 4) : Server | store : ("user48" |-> "<':4&%07$<31&$0;$,5?(9$$*:-3,'9#72,+;*&.2=(?:7:? 9!$0?8/,0%53$2>!9 9-8>-*= 1%!<8177&$$)4$8+&!0/'+211",
    "user49" |-> "%>2?-=;9 &2>889:=0(!?5:0->=2;;+<*)$.(47$+227+.5+=-<9#$:'$(+<045?$!79;(71(=77.+;?$*<>0!'4*$4%9,<4#5/(") > closedSocket(l("localhost", 4),
    socket(5), "") closedSocket(l("localhost", 4), socket(5), "") closedSocket(
    l("localhost", 4), socket(6), "")
Bye.
