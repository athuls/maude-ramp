		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	   Maude 2.7.1 built: Jun 27 2016 16:35:16
	    Copyright 1997-2016 SRI International
		   Thu Apr 26 12:12:53 2018
==========================================
erewrite in SERVER : init .
*********** rule
rl < O:Oid : SERVERSHIM:ServerShim | AS:AttributeSet,sockets :
    SKTS:Configuration > createdSocket(SERVER:Oid, socketManager, LISTENER:Oid)
    => acceptClient(LISTENER:Oid, SERVER:Oid) < O:Oid : SERVERSHIM:ServerShim |
    AS:AttributeSet,sockets : (SKTS:Configuration < LISTENER:Oid :
    BufferedSocket | read : "" >) > [label created-server-socket] .
O:Oid --> l("155.98.38.122", 0)
SERVERSHIM:ServerShim --> ServerShim
AS:AttributeSet --> contacts : empty,bufferedMsgs : none
SKTS:Configuration --> (none).Configuration
SERVER:Oid --> l("155.98.38.122")
LISTENER:Oid --> socket(4)
<> < l("155.98.38.122") : Server | none > < l("155.98.38.122", 0) : ServerShim
    | sockets : none,contacts : empty,bufferedMsgs : none > < l(
    "155.98.38.122", 1) : ClientShim | sockets : none,contacts : empty,
    bufferedMsgs : none > createdSocket(l("155.98.38.122"), socketManager,
    socket(4))
--->
(<> < l("155.98.38.122") : Server | none > < l("155.98.38.122", 1) : ClientShim
    | sockets : none,contacts : empty,bufferedMsgs : none >) acceptClient(
    socket(4), l("155.98.38.122")) < l("155.98.38.122", 0) : ServerShim | (
    contacts : empty,bufferedMsgs : none),sockets : (none < socket(4) :
    BufferedSocket | read : "" >) >
*********** trial #1
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => < O:Oid : SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : substr(S:String, 5 + find(S:String, "[beg]", 0),
    length(S:String)) >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335",
    0) == notFound = true /\ find(substr(S:String, 0, find(S:String, "[beg]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[msep]", 0) == notFound = true /\ not new-socket(
    substr(S:String, 0, find(S:String, "[beg]", 0))) = true [label
    flush-msg-beg-0] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #1
*********** trial #2
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => < O:Oid : SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : substr(S:String, 4 + find(S:String, "beg]", 0),
    length(S:String)) >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "beg]", 0)),
    "[beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(S:String,
    "beg]", 0)), "[msep]", 0) == notFound = true /\ not new-socket(substr(
    S:String, 0, find(S:String, "beg]", 0))) = true [label flush-msg-beg] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #2
*********** trial #3
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => [substr(S:String, 0, find(S:String, "[sep]", 0))] < O:Oid : SHIM:Shim
    | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),
    AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0,
    find(S:String, "[sep]", 0)), "[sep\335", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) ==
    notFound = true /\ find(substr(S:String, 5 + find(S:String, "[sep]", 0),
    length(S:String)), "[msep]", 0) == notFound = true /\ not new-socket(
    substr(S:String, 0, find(S:String, "[sep]", 0))) = true [label flush-msg-1]
    .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #3
*********** trial #4
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => [substr(S:String, 0, find(S:String, "[sep\335", 0))] < O:Oid :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 8 + find(S:String, "[sep\335", 0), length(
    S:String)) >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(substr(
    S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[beg]", 0) ==
    notFound = true /\ find(substr(S:String, 0, find(S:String, "[sep\335", 0)),
    "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[msep]", 0) == notFound = true /\ not new-socket(substr(
    S:String, 0, find(S:String, "[sep\335", 0))) = true [label flush-msg-2] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #4
*********** trial #5
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => string2msg(substr(S:String, 0, find(S:String, "[msep]", 0))) < O:Oid :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 6 + find(S:String, "[msep]", 0), length(S:String))
    >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0,
    find(S:String, "[msep]", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[msep]", 0)), "beg]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep\335",
    0) == notFound = true /\ not new-socket(substr(S:String, 0, find(S:String,
    "[msep]", 0))) = true [label flush-msg-maude] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[beg]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[beg]", 0) == notFound
    = true
*********** failure #5
*********** trial #6
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => < O:Oid : SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : substr(S:String, 6 + find(S:String, "[msep]", 0),
    length(S:String)) >),AS:AttributeSet,contacts : insert(O':Oid, SOCKET:Oid,
    LS:Map{Oid,Oid}) > if find(substr(S:String, 0, find(S:String, "[msep]",
    0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[msep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[msep]", 0)), "beg]", 0) == notFound = true /\
    find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep\335", 0) ==
    notFound = true /\ new-socket(O':Oid) := string2msg(substr(S:String, 0,
    find(S:String, "[msep]", 0))) [label dft-socket] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> (none).Configuration
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
O':Oid --> (unbound)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #6
*********** rule
(built-in rule for symbol __)
<> acceptClient(socket(4), l("155.98.38.122")) < l("155.98.38.122") : Server |
    none > < l("155.98.38.122", 0) : ServerShim | sockets : < socket(4) :
    BufferedSocket | read : "" >,contacts : empty,bufferedMsgs : none > < l(
    "155.98.38.122", 1) : ClientShim | sockets : none,contacts : empty,
    bufferedMsgs : none >
--->
<> < l("155.98.38.122") : Server | none > < l("155.98.38.122", 0) : ServerShim
    | sockets : < socket(4) : BufferedSocket | read : "" >,contacts : empty,
    bufferedMsgs : none > < l("155.98.38.122", 1) : ClientShim | sockets :
    none,contacts : empty,bufferedMsgs : none >
*********** trial #7
crl < O:Oid : SERVERSHIM:ServerShim | AS:AttributeSet,sockets :
    SKTS:Configuration,contacts : LS:Map{Oid,Oid} > acceptedClient(SERVER:Oid,
    LISTENER:Oid, IP:String, CLIENT:Oid) => ((acceptClient(LISTENER:Oid,
    SERVER:Oid) send(CLIENT:Oid, SERVER:Oid, msg2string(new-socket(SERVER:Oid))
    + "[msep]")) receive(CLIENT:Oid, SERVER:Oid)) < O:Oid :
    SERVERSHIM:ServerShim | sockets : (SKTS:Configuration < CLIENT:Oid :
    BufferedSocket | read : "" >),AS:AttributeSet,contacts : insert(l(
    IP:String), CLIENT:Oid, LS:Map{Oid,Oid}) > if not CLIENT:Oid in
    SKTS:Configuration = true [label accepted-client] .
O:Oid --> l("155.98.38.122", 0)
SERVERSHIM:ServerShim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
SERVER:Oid --> l("155.98.38.122")
LISTENER:Oid --> socket(4)
IP:String --> "155.98.38.141"
CLIENT:Oid --> socket(5)
*********** solving condition fragment
not CLIENT:Oid in SKTS:Configuration = true
*********** success for condition fragment
not CLIENT:Oid in SKTS:Configuration = true
O:Oid --> l("155.98.38.122", 0)
SERVERSHIM:ServerShim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
SERVER:Oid --> l("155.98.38.122")
LISTENER:Oid --> socket(4)
IP:String --> "155.98.38.141"
CLIENT:Oid --> socket(5)
*********** success #7
*********** rule
crl < O:Oid : SERVERSHIM:ServerShim | AS:AttributeSet,sockets :
    SKTS:Configuration,contacts : LS:Map{Oid,Oid} > acceptedClient(SERVER:Oid,
    LISTENER:Oid, IP:String, CLIENT:Oid) => ((acceptClient(LISTENER:Oid,
    SERVER:Oid) send(CLIENT:Oid, SERVER:Oid, msg2string(new-socket(SERVER:Oid))
    + "[msep]")) receive(CLIENT:Oid, SERVER:Oid)) < O:Oid :
    SERVERSHIM:ServerShim | sockets : (SKTS:Configuration < CLIENT:Oid :
    BufferedSocket | read : "" >),AS:AttributeSet,contacts : insert(l(
    IP:String), CLIENT:Oid, LS:Map{Oid,Oid}) > if not CLIENT:Oid in
    SKTS:Configuration = true [label accepted-client] .
O:Oid --> l("155.98.38.122", 0)
SERVERSHIM:ServerShim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
LS:Map{Oid,Oid} --> (empty).Map{Oid,Oid}
SERVER:Oid --> l("155.98.38.122")
LISTENER:Oid --> socket(4)
IP:String --> "155.98.38.141"
CLIENT:Oid --> socket(5)
<> < l("155.98.38.122") : Server | none > < l("155.98.38.122", 0) : ServerShim
    | sockets : < socket(4) : BufferedSocket | read : "" >,contacts : empty,
    bufferedMsgs : none > < l("155.98.38.122", 1) : ClientShim | sockets :
    none,contacts : empty,bufferedMsgs : none > acceptedClient(l(
    "155.98.38.122"), socket(4), "155.98.38.141", socket(5))
--->
(<> < l("155.98.38.122") : Server | none > < l("155.98.38.122", 1) : ClientShim
    | sockets : none,contacts : empty,bufferedMsgs : none >) ((acceptClient(
    socket(4), l("155.98.38.122")) send(socket(5), l("155.98.38.122"),
    msg2string(new-socket(l("155.98.38.122"))) + "[msep]")) receive(socket(5),
    l("155.98.38.122"))) < l("155.98.38.122", 0) : ServerShim | sockets : (<
    socket(4) : BufferedSocket | read : "" > < socket(5) : BufferedSocket |
    read : "" >),bufferedMsgs : none,contacts : insert(l("155.98.38.141"),
    socket(5), empty) >
*********** trial #8
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => < O:Oid : SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : substr(S:String, 5 + find(S:String, "[beg]", 0),
    length(S:String)) >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335",
    0) == notFound = true /\ find(substr(S:String, 0, find(S:String, "[beg]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[msep]", 0) == notFound = true /\ not new-socket(
    substr(S:String, 0, find(S:String, "[beg]", 0))) = true [label
    flush-msg-beg-0] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #8
*********** trial #9
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => < O:Oid : SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : substr(S:String, 5 + find(S:String, "[beg]", 0),
    length(S:String)) >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep\335",
    0) == notFound = true /\ find(substr(S:String, 0, find(S:String, "[beg]",
    0)), "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[beg]", 0)), "[msep]", 0) == notFound = true /\ not new-socket(
    substr(S:String, 0, find(S:String, "[beg]", 0))) = true [label
    flush-msg-beg-0] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #9
*********** trial #10
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => < O:Oid : SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : substr(S:String, 4 + find(S:String, "beg]", 0),
    length(S:String)) >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "beg]", 0)),
    "[beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(S:String,
    "beg]", 0)), "[msep]", 0) == notFound = true /\ not new-socket(substr(
    S:String, 0, find(S:String, "beg]", 0))) = true [label flush-msg-beg] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #10
*********** trial #11
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => < O:Oid : SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : substr(S:String, 4 + find(S:String, "beg]", 0),
    length(S:String)) >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(
    substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep\335", 0)
    == notFound = true /\ find(substr(S:String, 0, find(S:String, "beg]", 0)),
    "[beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(S:String,
    "beg]", 0)), "[msep]", 0) == notFound = true /\ not new-socket(substr(
    S:String, 0, find(S:String, "beg]", 0))) = true [label flush-msg-beg] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "beg]", 0)), "[sep]", 0) == notFound =
    true
*********** failure #11
*********** trial #12
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => [substr(S:String, 0, find(S:String, "[sep]", 0))] < O:Oid : SHIM:Shim
    | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),
    AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0,
    find(S:String, "[sep]", 0)), "[sep\335", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) ==
    notFound = true /\ find(substr(S:String, 5 + find(S:String, "[sep]", 0),
    length(S:String)), "[msep]", 0) == notFound = true /\ not new-socket(
    substr(S:String, 0, find(S:String, "[sep]", 0))) = true [label flush-msg-1]
    .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #12
*********** trial #13
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => [substr(S:String, 0, find(S:String, "[sep]", 0))] < O:Oid : SHIM:Shim
    | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket | read :
    substr(S:String, 5 + find(S:String, "[sep]", 0), length(S:String)) >),
    AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0,
    find(S:String, "[sep]", 0)), "[sep\335", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[sep]", 0)), "[beg]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[sep]", 0)), "beg]", 0) ==
    notFound = true /\ find(substr(S:String, 5 + find(S:String, "[sep]", 0),
    length(S:String)), "[msep]", 0) == notFound = true /\ not new-socket(
    substr(S:String, 0, find(S:String, "[sep]", 0))) = true [label flush-msg-1]
    .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep]", 0)), "[sep\335", 0) ==
    notFound = true
*********** failure #13
*********** trial #14
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => [substr(S:String, 0, find(S:String, "[sep\335", 0))] < O:Oid :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 8 + find(S:String, "[sep\335", 0), length(
    S:String)) >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(substr(
    S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[beg]", 0) ==
    notFound = true /\ find(substr(S:String, 0, find(S:String, "[sep\335", 0)),
    "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[msep]", 0) == notFound = true /\ not new-socket(substr(
    S:String, 0, find(S:String, "[sep\335", 0))) = true [label flush-msg-2] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #14
*********** trial #15
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => [substr(S:String, 0, find(S:String, "[sep\335", 0))] < O:Oid :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 8 + find(S:String, "[sep\335", 0), length(
    S:String)) >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(substr(
    S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) == notFound = true
    /\ find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[beg]", 0) ==
    notFound = true /\ find(substr(S:String, 0, find(S:String, "[sep\335", 0)),
    "beg]", 0) == notFound = true /\ find(substr(S:String, 0, find(S:String,
    "[sep\335", 0)), "[msep]", 0) == notFound = true /\ not new-socket(substr(
    S:String, 0, find(S:String, "[sep\335", 0))) = true [label flush-msg-2] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[sep\335", 0)), "[sep]", 0) ==
    notFound = true
*********** failure #15
*********** trial #16
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => string2msg(substr(S:String, 0, find(S:String, "[msep]", 0))) < O:Oid :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 6 + find(S:String, "[msep]", 0), length(S:String))
    >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0,
    find(S:String, "[msep]", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[msep]", 0)), "beg]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep\335",
    0) == notFound = true /\ not new-socket(substr(S:String, 0, find(S:String,
    "[msep]", 0))) = true [label flush-msg-maude] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[beg]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[beg]", 0) == notFound
    = true
*********** failure #16
*********** trial #17
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => string2msg(substr(S:String, 0, find(S:String, "[msep]", 0))) < O:Oid :
    SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid : BufferedSocket |
    read : substr(S:String, 6 + find(S:String, "[msep]", 0), length(S:String))
    >),AS:AttributeSet,contacts : LS:Map{Oid,Oid} > if find(substr(S:String, 0,
    find(S:String, "[msep]", 0)), "[beg]", 0) == notFound = true /\ find(
    substr(S:String, 0, find(S:String, "[msep]", 0)), "beg]", 0) == notFound =
    true /\ find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep\335",
    0) == notFound = true /\ not new-socket(substr(S:String, 0, find(S:String,
    "[msep]", 0))) = true [label flush-msg-maude] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[beg]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[beg]", 0) == notFound
    = true
*********** failure #17
*********** trial #18
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => < O:Oid : SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : substr(S:String, 6 + find(S:String, "[msep]", 0),
    length(S:String)) >),AS:AttributeSet,contacts : insert(O':Oid, SOCKET:Oid,
    LS:Map{Oid,Oid}) > if find(substr(S:String, 0, find(S:String, "[msep]",
    0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[msep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[msep]", 0)), "beg]", 0) == notFound = true /\
    find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep\335", 0) ==
    notFound = true /\ new-socket(O':Oid) := string2msg(substr(S:String, 0,
    find(S:String, "[msep]", 0))) [label dft-socket] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(5) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(4)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
O':Oid --> (unbound)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #18
*********** trial #19
crl < O:Oid : SHIM:Shim | AS:AttributeSet,sockets : (SKTS:Configuration <
    SOCKET:Oid : BufferedSocket | read : S:String >),contacts : LS:Map{Oid,Oid}
    > => < O:Oid : SHIM:Shim | sockets : (SKTS:Configuration < SOCKET:Oid :
    BufferedSocket | read : substr(S:String, 6 + find(S:String, "[msep]", 0),
    length(S:String)) >),AS:AttributeSet,contacts : insert(O':Oid, SOCKET:Oid,
    LS:Map{Oid,Oid}) > if find(substr(S:String, 0, find(S:String, "[msep]",
    0)), "[sep]", 0) == notFound = true /\ find(substr(S:String, 0, find(
    S:String, "[msep]", 0)), "[beg]", 0) == notFound = true /\ find(substr(
    S:String, 0, find(S:String, "[msep]", 0)), "beg]", 0) == notFound = true /\
    find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep\335", 0) ==
    notFound = true /\ new-socket(O':Oid) := string2msg(substr(S:String, 0,
    find(S:String, "[msep]", 0))) [label dft-socket] .
O:Oid --> l("155.98.38.122", 0)
SHIM:Shim --> ServerShim
AS:AttributeSet --> bufferedMsgs : none
SKTS:Configuration --> < socket(4) : BufferedSocket | read : "" >
SOCKET:Oid --> socket(5)
S:String --> ""
LS:Map{Oid,Oid} --> l("155.98.38.141") |-> socket(5)
O':Oid --> (unbound)
*********** solving condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep]", 0) == notFound
    = true
*********** failure for condition fragment
find(substr(S:String, 0, find(S:String, "[msep]", 0)), "[sep]", 0) == notFound
    = true
*********** failure #19
*********** rule
(built-in rule for symbol __)
<> acceptClient(socket(4), l("155.98.38.122")) receive(socket(5), l(
    "155.98.38.122")) < l("155.98.38.122") : Server | none > < l(
    "155.98.38.122", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket
    | read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "155.98.38.141") |-> socket(5),bufferedMsgs : none > < l("155.98.38.122",
    1) : ClientShim | sockets : none,contacts : empty,bufferedMsgs : none >
    send(socket(5), l("155.98.38.122"),
    "new-socket `( l `( \"155.98.38.122\" `) `) [msep]")
--->
<> < l("155.98.38.122") : Server | none > < l("155.98.38.122", 0) : ServerShim
    | sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >),contacts : l("155.98.38.141") |-> socket(5),
    bufferedMsgs : none > < l("155.98.38.122", 1) : ClientShim | sockets :
    none,contacts : empty,bufferedMsgs : none >
*********** rule
(built-in rule for symbol __)
<> < l("155.98.38.122") : Server | none > < l("155.98.38.122", 0) : ServerShim
    | sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >),contacts : l("155.98.38.141") |-> socket(5),
    bufferedMsgs : none > < l("155.98.38.122", 1) : ClientShim | sockets :
    none,contacts : empty,bufferedMsgs : none >
--->
<> < l("155.98.38.122") : Server | none > < l("155.98.38.122", 0) : ServerShim
    | sockets : (< socket(4) : BufferedSocket | read : "" > < socket(5) :
    BufferedSocket | read : "" >),contacts : l("155.98.38.141") |-> socket(5),
    bufferedMsgs : none > < l("155.98.38.122", 1) : ClientShim | sockets :
    none,contacts : empty,bufferedMsgs : none >
rewrites: 80 in 4ms cpu (48019ms real) (20000 rewrites/second)
result Configuration: <> < l("155.98.38.122") : Server | none > < l(
    "155.98.38.122", 0) : ServerShim | sockets : (< socket(4) : BufferedSocket
    | read : "" > < socket(5) : BufferedSocket | read : "" >),contacts : l(
    "155.98.38.141") |-> socket(5),bufferedMsgs : none > < l("155.98.38.122",
    1) : ClientShim | sockets : none,contacts : empty,bufferedMsgs : none >
Bye.
